services:
  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: ${GREENLIGHT_DB_NAME}
      POSTGRES_PASSWORD: ${GREENLIGHT_DB_PASSWORD}
      POSTGRES_DB: ${GREENLIGHT_DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${GREENLIGHT_DB_NAME}"]
      interval: 10s
      retries: 5
    ports:
      - "4546:5432"

  migrate:
    image: migrate/migrate:v4.16.2
    command:
      [
        "--path=/migrations",
        "-database",
        "postgres://${GREENLIGHT_DB_USERNAME}:${GREENLIGHT_DB_PASSWORD}@db:5432/${GREENLIGHT_DB_NAME}?sslmode=disable",
        "up",
      ]
    volumes:
      - ./migrations:/migrations
    depends_on:
      db:
        condition: service_healthy

  app:
    image: ghcr.io/shortykevich/greenlight:latest
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      GREENLIGHT_DB_PORT: ${GREENLIGHT_DB_PORT}
      GREENLIGHT_DB_USERNAME: ${GREENLIGHT_DB_USERNAME}
      GREENLIGHT_DB_PASSWORD: ${GREENLIGHT_DB_PASSWORD}
      GREENLIGHT_DB_HOST: ${GREENLIGHT_DB_HOST}
      GREENLIGHT_DB_NAME: ${GREENLIGHT_DB_NAME}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_SENDER: ${SMTP_SENDER}
    ports:
      - "4545:4545"
    restart: on-failure

  caddy:
    image: caddy:2
    restart: unless-stopped
    environment:
      DOMAIN: ${DOMAIN_NAME}
      EMAIL: ${EMAIL}
    ports:
      - "6969:80"
      - "6967:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - app

volumes:
  caddy_data:
  caddy_config:
  db_data:
